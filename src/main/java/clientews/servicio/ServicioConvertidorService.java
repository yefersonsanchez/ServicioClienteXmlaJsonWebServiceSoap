package clientews.servicio;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.10 Generated source
 * version: 2.2
 *
 */
@WebServiceClient(name = "ServicioConvertidorService", targetNamespace = "http://beans/", wsdlLocation = "http://laptop-m7tiu6id:8080/ServicioConvertidorService/ServicioConvertidor?wsdl")
public class ServicioConvertidorService
        extends Service {

    private final static URL SERVICIOCONVERTIDORSERVICE_WSDL_LOCATION;
    private final static WebServiceException SERVICIOCONVERTIDORSERVICE_EXCEPTION;
    private final static QName SERVICIOCONVERTIDORSERVICE_QNAME = new QName("http://beans/", "ServicioConvertidorService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://laptop-m7tiu6id:8080/ServicioConvertidorService/ServicioConvertidor?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SERVICIOCONVERTIDORSERVICE_WSDL_LOCATION = url;
        SERVICIOCONVERTIDORSERVICE_EXCEPTION = e;
    }

    public ServicioConvertidorService() {
        super(__getWsdlLocation(), SERVICIOCONVERTIDORSERVICE_QNAME);
    }

    public ServicioConvertidorService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SERVICIOCONVERTIDORSERVICE_QNAME, features);
    }

    public ServicioConvertidorService(URL wsdlLocation) {
        super(wsdlLocation, SERVICIOCONVERTIDORSERVICE_QNAME);
    }

    public ServicioConvertidorService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICIOCONVERTIDORSERVICE_QNAME, features);
    }

    public ServicioConvertidorService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServicioConvertidorService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns ServicioConvertidorInterfaz
     */
    @WebEndpoint(name = "ServicioConvertidorPort")
    public ServicioConvertidorInterfaz getServicioConvertidorPort() {
        return super.getPort(new QName("http://beans/", "ServicioConvertidorPort"), ServicioConvertidorInterfaz.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns ServicioConvertidorInterfaz
     */
    @WebEndpoint(name = "ServicioConvertidorPort")
    public ServicioConvertidorInterfaz getServicioConvertidorPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://beans/", "ServicioConvertidorPort"), ServicioConvertidorInterfaz.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SERVICIOCONVERTIDORSERVICE_EXCEPTION != null) {
            throw SERVICIOCONVERTIDORSERVICE_EXCEPTION;
        }
        return SERVICIOCONVERTIDORSERVICE_WSDL_LOCATION;
    }

}
